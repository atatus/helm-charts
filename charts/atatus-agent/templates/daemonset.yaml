{{- if .Values.daemonset.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "atatus-agent.fullname" . }}
  labels:
    app: "{{ template "atatus-agent.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    {{- if .Values.daemonset.labels }}
    {{- range $key, $value := .Values.daemonset.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- else }}
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
  {{- if .Values.daemonset.annotations}}
  annotations:
    {{- range $key, $value := .Values.daemonset.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: "{{ template "atatus-agent.fullname" . }}"
      release: {{ .Release.Name | quote }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  template:
    metadata:
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{/* This forces a restart if the configmap has changed */}}
        {{- if .Values.daemonset.atatusConfig }}
        configChecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
      name: "{{ template "atatus-agent.fullname" . }}"
      labels:
        app: "{{ template "atatus-agent.fullname" . }}"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        {{- if .Values.daemonset.labels }}
        {{- range $key, $value := .Values.daemonset.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- else }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      affinity: {{ toYaml ( .Values.affinity | default .Values.daemonset.affinity ) | nindent 8 }}
      nodeSelector: {{ toYaml ( .Values.nodeSelector | default .Values.daemonset.nodeSelector ) | nindent 8 }}
      tolerations: {{ toYaml ( .Values.tolerations | default .Values.daemonset.tolerations ) | nindent 8 }}
      {{- if .Values.daemonset.hostNetworking }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName  }}
      {{- end }}
      serviceAccountName: {{ template "atatus-agent.serviceAccount" . }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      volumes:
      - name: atatus-agent-config
        configMap:
          defaultMode: 0640
          name: {{ template "atatus-agent.fullname" . }}-daemonset-config
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: data
        hostPath:
          path: /var/lib/atatus-infra-agent
          type: DirectoryOrCreate
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      containers:
      - name: "atatus-infra-agent"
        image: "{{ .Values.image }}:{{ default .Chart.AppVersion .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        args:
        - "-c"
        - "/etc/atatus-infra-agent/"
        - "-e"
        - "--system.hostfs=/hostfs"
        {{- if .Values.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
        {{- end }}
        resources: {{ toYaml ( .Values.resources | default .Values.daemonset.resources ) | nindent 10 }}
        env:
        - name: ATATUS_DOCKER_METRICS
          value: "false"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext: {{ toYaml ( .Values.podSecurityContext | default .Values.daemonset.securityContext ) | nindent 10 }}
        volumeMounts:
        - name: atatus-agent-config
          mountPath: /etc/atatus-infra-agent/atatus.yml
          readOnly: true
          subPath: atatus.yml
        - name: atatus-agent-config
          mountPath: /etc/atatus-infra-agent/conf.d/kubernetes.d/kubernetes.yml
          readOnly: true
          subPath: kubernetes.yml
        - name: data
          mountPath: /usr/share/atatus-infra-agent/data
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
{{- end }}